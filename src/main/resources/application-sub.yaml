server:
  port: 8085
spring:
  main:
    allow-bean-definition-overriding:true
  shardingsphere:
    # 参数配置，显示sql
    props:
      sql:
        show: true
    # 配置数据源
    datasource:
      # 给每个数据源取别名，下面 的ds1,ds2,ds3
      names: ds0,ds1
      # 给master ds1配置数据库连接信息
      ds0:
        # 配置druid数据库源
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:113311/ksd-shading-db?useUnicode=true&characterEncodeding=utf8&serverTimezone=GMT%2b8
        username: root
        password: 123456
        maxPoolSize: 100
        minPoolSize: 5
      # 配置slave
      ds1:
        # 配置druid数据库源
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:113312/ksd-shading-db?useUnicode=true&characterEncodeding=utf8&serverTimezone=GMT%2b8
        username: root
        password: 123456
        maxPoolSize: 100
        minPoolSize: 5
    # 配置sharding
    sharding:
      # 默认数据源，主要有哦那个与写，注意一定要配置读写分离
      # 如果不配置，那就会把所有节点都当作slave节点
      default-data-source-name: ds1
      # 配置分表的规则
      tables:
        # ksd_user 逻辑表名
        ksd_user:
          # 数据节点：数据源$->{0..N}.逻辑表名$->{0..N}
          actual-data-nodes: ds$->{0..1}.ksd_user$->{0..1}
          # 拆分库策略
          database-strategy:
            standard:
              shardingColumn: birthday
              preciseAlgorithmClassName: com.wyb.shardingjdbc.config.BirthdayAlgorithm
          # 分表策略
          table-strategy:
            inline:
              # 分片字段
              sharding-column: age
              # 分片算法表达式
              algorithm-expression: ksd_user$->{age % 2}

# 整合mybtis的配置
mybatis:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.wyb.shardingjdbc.entity

